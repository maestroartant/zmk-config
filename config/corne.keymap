/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    require-prior-idle-ms = <0>;
    quick-tap-ms = <0>;
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    hold-trigger-key-positions = <>;
    bindings = <&kp>, <&kp>;
};

/ {
    behaviors {
        tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        macros {
            bindings = <&to 4>;
            key-positions = <38 39>;
        };
    };

    macros {
        emoji_heart: emoji_heart {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp DOT &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp COMMA &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp DOT &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp EXCL>;
            label = "EMOJI_HEART";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | TAB  |  Q  |  W  |  E  |  R  |    T    |   |  Y  |  U   |  I  |  O  |  P  | ESC |
            // | CTRL |  A  |  S  |  D  |  F  |    G    |   |  H  |  J   |  K  |  L  |  ;  |  LWR/'   |
            // | SHFT |  Z  |  X  |  C  |  V  |    B    |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
            //                    | GUI | LWR | ALT/ENT |   | HYPER/SPC | BKSP  | RSE |

            bindings = <
&tp GRAVE ESCAPE  &kp Q  &kp W  &kp E             &kp R      &kp T    &kp Y  &kp U  &kp I         &kp O    &kp P     &kp BACKSPACE
&kp TAB           &kp A  &kp S  &kp D             &kp F      &kp G    &kp H  &kp J  &kp K         &kp L    &kp SEMI  &kp ENTER
&kp LEFT_SHIFT    &kp Z  &kp X  &kp C             &kp V      &kp B    &kp N  &kp M  &kp COMMA     &kp DOT  &kp FSLH  &mt RIGHT_ALT RIGHT_SHIFT
                                &kp LEFT_CONTROL  &kp SPACE  &mo 1    &mo 3  &mo 2  &kp LEFT_WIN
            >;
        };

        layer_below {
            // -----------------------------------------------------------------------------------------
            // |      |  !  |  @  |  #  |  $  |    %     |   |  ^  |  &  |  *  |  (  |  )  |   \   |
            // |      |  1  |  2  |  3  |  4  |    5     |   |  -  |  =  |  `  |  [  |  ]  |  "|"  |
            // | SHFT |  6  |  7  |  8  |  9  |    0     |   |  _  |  +  |  ~  |  {  |  }  | RSHFT |
            //                     | GUI |     | ALT/ENT |   | HYPER/SPACE | BKSP |    |

            bindings = <
&kp LG(LS(S))  &kp EXCL    &kp AT      &kp HASH     &kp DLLR       &kp PRCNT    &kp CARET                   &kp AMPS   &kp KP_MULTIPLY  &kp LPAR       &kp RPAR  &kp LEFT_BRACKET
&kp ENTER      &kp DELETE  &kp INSERT  &kp PAGE_UP  &kp PAGE_DOWN  &kp N5       &kp MINUS                   &kp EQUAL  &kp GRAVE        &kp BACKSLASH  &kp RBKT  &kp SQT
&kp LG(V)      &kp N6      &kp N7      &kp N8       &kp N9         &kp N0       &kp UNDER                   &kp PLUS   &kp TILDE        &kp LBRC       &kp RBRC  &kp DOUBLE_QUOTES
                                       &trans       &trans         &trans       &tp LC(LS(LA(LGUI))) SPACE  &kp COLON  &kp PIPE
            >;
        };

        layer_3 {
            bindings = <
&bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mkp LCLK    &msc SCRL_UP    &kp UP_ARROW    &msc SCRL_DOWN   &kp C_VOLUME_UP    &kp LEFT_BRACKET
&trans          &trans        &trans        &trans        &trans        &trans          &mkp RCLK    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp C_VOLUME_DOWN  &kp SQT
&trans          &trans        &trans        &trans        &trans        &trans          &kp C_PAUSE  &mmv MOVE_LEFT  &mmv MOVE_UP    &mmv MOVE_DOWN   &mmv MOVE_RIGHT    &kp C_PLAY
                                            &trans        &trans        &trans          &trans       &trans          &trans
            >;
        };

        layer_above {
            // -----------------------------------------------------------------------------------------
            // |       |  F1  |  F2  |  F3  |  F4  |  F5 |            |  F6  |  F7  |  F8  |  F9  |  F10  |   |
            // |       | Prev | Next | Vol - | Vol + | Play/Pause |   |      | LFT | DWN |  UP | RGT |     |     |
            // | BTCLR | BT1 | BT2 | BT3 | BT4 | BT5 |   |            |     |     |     |     |     |     |
            //                    |     |     |    |                  |     |     |     |

            bindings = <
&trans      &kp F1        &kp F2        &kp F3        &kp F4        &kp F5          &kp F6    &kp F7    &kp F8  &kp F9     &kp F10  &trans
&trans      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans   &trans
&bt BT_CLR  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0    &trans    &trans    &trans  &trans     &trans   &trans
                                        &trans        &trans        &trans          &trans    &trans    &trans
            >;
        };

        layer_4 {
            bindings = <
&to 0   &trans  &trans  &trans  &trans  &trans    &emoji_heart  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans        &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans        &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans        &trans  &trans
            >;
        };
    };
};
